<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmdInstall.Text" xml:space="preserve">
    <value>Register firewall, bot farm and web services components</value>
  </data>
  <data name="ComponentsNotInstalled.Message" xml:space="preserve">
    <value>PortalKeeper Components not registered. Registration will update your web.config file with the firewall HttpModule, Open Rasta components for web services, enforce full trust, and create the bot farm scheduled task.  </value>
  </data>
  <data name="cmdUninstall.Text" xml:space="preserve">
    <value>Unregister Components</value>
  </data>
  <data name="ComponentsInstalled.Message" xml:space="preserve">
    <value>PortalKeeper Component registered. Don't forget to unregister the component before you uninstall the module.</value>
  </data>
  <data name="ConfigSaved.Message" xml:space="preserve">
    <value>PortalKeeper Configuration Saved</value>
  </data>
  <data name="cmdSave.Text" xml:space="preserve">
    <value>Save Portal Settings</value>
  </data>
  <data name="cmdSaveConfig.Text" xml:space="preserve">
    <value>Save Config</value>
  </data>
  <data name="lblConfig.Text" xml:space="preserve">
    <value>Main Config</value>
  </data>
  <data name="lblSettings.Text" xml:space="preserve">
    <value>Portal Specific Settings</value>
  </data>
  <data name="HostConfigInvalid.Message" xml:space="preserve">
    <value>Invalid Host Config - Check the validators</value>
  </data>
  <data name="HostConfigSaved.Message" xml:space="preserve">
    <value>Host Config File saved at the root of the module's directory</value>
  </data>
  <data name="PortalLevelSettingsDisabled.Message" xml:space="preserve">
    <value>Portal Level configuration was disabled by a super user. Contact your host for more information.</value>
  </data>
  <data name="CustomErrorsSaved.Message" xml:space="preserve">
    <value>Custom Error section succesfully updated in web.config file</value>
  </data>
  <data name="cmdRunBots.Text" xml:space="preserve">
    <value>Run Forced Bots</value>
  </data>
  <data name="cmdDebug.Text" xml:space="preserve">
    <value>Dev Command (Hide in Prod) *</value>
  </data>
  <data name="lblUserBot.Text" xml:space="preserve">
    <value>User Bot Settings</value>
  </data>
  <data name="cmdSaveUserBot.Text" xml:space="preserve">
    <value>Save Bot</value>
  </data>
  <data name="cmdDeleteUserBot.Text" xml:space="preserve">
    <value>Delete Bot</value>
  </data>
  <data name="UserBotDeleted.Message" xml:space="preserve">
    <value>Your bot was deleted</value>
  </data>
  <data name="UserBotSaved.Message" xml:space="preserve">
    <value>Your bot was successfully encrypted and saved</value>
  </data>
  <data name="lblBotDefinition.Text" xml:space="preserve">
    <value>Bot Definition</value>
  </data>
  <data name="NoUserBot.Message" xml:space="preserve">
    <value>No User bot was associated to this module instance. If you think this is a mistake, please contact a site administrator.</value>
  </data>
  <data name="ManualRun.Message" xml:space="preserve">
    <value>Forced Bots successfully run. {0} bot(s) were run</value>
  </data>
  <data name="cmdClearProbes.Text" xml:space="preserve">
    <value>Clear Rankings</value>
  </data>
  <data name="ProbesCleared.Message" xml:space="preserve">
    <value>Rankings successfully cleared</value>
  </data>
  <data name="KC_LocationSettings.Header" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="cmdInstallRasta.Text" xml:space="preserve">
    <value>Register Open Rasta web services components</value>
  </data>
  <data name="cmdUninstallRasta.Text" xml:space="preserve">
    <value>Unregister Rasta Components</value>
  </data>
  <data name="cmdUninstall.Confirm" xml:space="preserve">
    <value>You are about to unregister Portal Keeper components including the firewall and web services httpmodules, and the farm bot scheduler task. Proceed?</value>
  </data>
  <data name="pnlComponents.Text" xml:space="preserve">
    <value>Components Registration</value>
  </data>
  <data name="ControlTitle_.Text" xml:space="preserve">
    <value>Configuration</value>
  </data>
</root>